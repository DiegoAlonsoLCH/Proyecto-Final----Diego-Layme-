expression 'Errores en NUMERADAS' =
		let
		Origen = NUMERADAS,
		  #"Errores de coincidencia detectados" = let
		    tableWithOnlyPrimitiveTypes = Table.SelectColumns(Origen, Table.ColumnsOfType(Origen, {type nullable number, type nullable text, type nullable logical, type nullable date, type nullable datetime, type nullable datetimezone, type nullable time, type nullable duration})),
		    recordTypeFields = Type.RecordFields(Type.TableRow(Value.Type(tableWithOnlyPrimitiveTypes))),
		    fieldNames = Record.FieldNames(recordTypeFields),
		    fieldTypes = List.Transform(Record.ToList(recordTypeFields), each [Type]),
		    pairs = List.Transform(List.Positions(fieldNames), (i) => {fieldNames{i}, (v) => if v = null or Value.Is(v, fieldTypes{i}) then v else error [Message = "El tipo del valor no coincide con el tipo de la columna.", Detail = v], fieldTypes{i}})
		in
		    Table.TransformColumns(Origen, pairs),
		  #"Índice agregado" = Table.AddIndexColumn(#"Errores de coincidencia detectados", "Número de fila" ,1),
		  #"Conservar errores" = Table.SelectRowsWithErrors(#"Índice agregado", {"N° DUA", "Fecha Numeración", "Régimen", "Canal", "Modalidad", "Estado DUA", "Consignatario", "Agencia de Aduana", "Garantía 160°", "Fecha Autorización Levante", "Valor CIF", "Monto trib. liquidados $", "Monto trib. liquidados S/.", "Cantidad Series", "Rango de texto", "Prefijo", "Rango de texto.1", "Sufijo"}),
		  #"Columnas reordenadas" = Table.ReorderColumns(#"Conservar errores", {"Número de fila", "N° DUA", "Fecha Numeración", "Régimen", "Canal", "Modalidad", "Estado DUA", "Consignatario", "Agencia de Aduana", "Garantía 160°", "Fecha Autorización Levante", "Valor CIF", "Monto trib. liquidados $", "Monto trib. liquidados S/.", "Cantidad Series", "Rango de texto", "Prefijo", "Rango de texto.1", "Sufijo"}),
		    #"Errores quitados" = Table.RemoveRowsWithErrors(#"Columnas reordenadas", {"Monto trib. liquidados $"})
		in
		    #"Errores quitados"
	lineageTag: 7d2373ae-edfe-4063-b8b2-af21060411e4
	queryGroup: 'Errores en las consultas: 3/08/2025 17:16:46'

	annotation PBI_NavigationStepName = Navegación

	annotation PBI_ResultType = Exception

expression 'TORTA DE SOYA' =
		let
		    Origen = Excel.Workbook(File.Contents("D:\Usuarios\dlayme\OneDrive - SUNAT\DLAYME\PROYECTO FINAL PB\TORTA DE SOYA\2025-08-03_073344_ReporteGestion.xls"), null, true),
		    report1 = Origen{[Name="report0"]}[Data],
		    #"Tipo cambiado" = Table.TransformColumnTypes(report1,{{"Column1", type text}, {"Column2", type text}, {"Column3", type text}, {"Column4", type text}, {"Column5", type text}, {"Column6", type text}, {"Column7", type text}, {"Column8", type text}, {"Column9", type text}, {"Column10", type text}, {"Column11", type text}, {"Column12", type text}, {"Column13", type text}, {"Column14", type text}, {"Column15", type text}, {"Column16", type text}, {"Column17", type text}, {"Column18", type text}, {"Column19", type text}}),
		    #"Filas superiores quitadas" = Table.Skip(#"Tipo cambiado",6),
		    #"Columnas quitadas" = Table.RemoveColumns(#"Filas superiores quitadas",{"Column1", "Column19", "Column18", "Column17"}),
		    #"Encabezados promovidos" = Table.PromoteHeaders(#"Columnas quitadas", [PromoteAllScalars=true]),
		    #"Tipo cambiado1" = Table.TransformColumnTypes(#"Encabezados promovidos",{{"Nro.", Int64.Type}, {"N° DUA", type text}, {"Fecha Numeración", type date}, {"Régimen", type text}, {"Canal", type text}, {"Modalidad", type text}, {"Estado DUA", type text}, {"Consignatario", type text}, {"Agencia de Aduana", type text}, {"Garantía 160°", type text}, {"Fecha Autorización Levante", type date}, {"Valor CIF", type number}, {"Monto trib. liquidados $", Int64.Type}, {"Monto trib. liquidados S/.", Int64.Type}, {"Cantidad Series", Int64.Type}}),
		    #"Columnas quitadas1" = Table.RemoveColumns(#"Tipo cambiado1",{"Fecha Numeración", "Nro.", "Régimen", "Canal", "Modalidad", "Estado DUA", "Consignatario", "Agencia de Aduana", "Garantía 160°", "Valor CIF", "Monto trib. liquidados $", "Monto trib. liquidados S/.", "Cantidad Series"}),
		    #"Filas en blanco eliminadas" = Table.SelectRows(#"Columnas quitadas1", each not List.IsEmpty(List.RemoveMatchingItems(Record.FieldValues(_), {"", null}))),
		    #"Duplicados quitados" = Table.Distinct(#"Filas en blanco eliminadas", {"N° DUA"}),
		    #"Errores quitados" = Table.RemoveRowsWithErrors(#"Duplicados quitados", {"N° DUA"}),
		    #"Columnas quitadas2" = Table.RemoveColumns(#"Errores quitados",{"Fecha Autorización Levante"}),
		    #"Personalizada agregada" = Table.AddColumn(#"Columnas quitadas2", "Partida", each 2304),
		    #"Tipo cambiado2" = Table.TransformColumnTypes(#"Personalizada agregada",{{"Partida", Int64.Type}})
		in
		    #"Tipo cambiado2"
	lineageTag: f54f9804-c8d9-444b-9423-1126f39fcc5e

	annotation PBI_NavigationStepName = Navegación

	annotation PBI_ResultType = Table

expression HARINA =
		let
		    Origen = Excel.Workbook(File.Contents("D:\Usuarios\dlayme\OneDrive - SUNAT\DLAYME\PROYECTO FINAL PB\HARINA DE SOYA\2025-08-03_073812_ReporteGestion.xls"), null, true),
		    report1 = Origen{[Name="report0"]}[Data],
		    #"Tipo cambiado" = Table.TransformColumnTypes(report1,{{"Column1", type text}, {"Column2", type text}, {"Column3", type text}, {"Column4", type text}, {"Column5", type text}, {"Column6", type text}, {"Column7", type text}, {"Column8", type text}, {"Column9", type text}, {"Column10", type text}, {"Column11", type text}, {"Column12", type text}, {"Column13", type text}, {"Column14", type text}, {"Column15", type text}, {"Column16", type text}, {"Column17", type text}, {"Column18", type text}, {"Column19", type text}}),
		    #"Columnas quitadas" = Table.RemoveColumns(#"Tipo cambiado",{"Column1", "Column4", "Column5", "Column6", "Column7", "Column8", "Column9", "Column10", "Column11", "Column12", "Column13", "Column14", "Column15", "Column16", "Column17", "Column18", "Column19", "Column2"}),
		    #"Filas en blanco eliminadas" = Table.SelectRows(#"Columnas quitadas", each not List.IsEmpty(List.RemoveMatchingItems(Record.FieldValues(_), {"", null}))),
		    #"Encabezados promovidos" = Table.PromoteHeaders(#"Filas en blanco eliminadas", [PromoteAllScalars=true]),
		    #"Tipo cambiado1" = Table.TransformColumnTypes(#"Encabezados promovidos",{{"N° DUA", type text}}),
		    #"Errores quitados" = Table.RemoveRowsWithErrors(#"Tipo cambiado1", {"N° DUA"}),
		    #"Duplicados quitados" = Table.Distinct(#"Errores quitados"),
		    #"Personalizada agregada" = Table.AddColumn(#"Duplicados quitados", "Partida", each 1208),
		    #"Tipo cambiado2" = Table.TransformColumnTypes(#"Personalizada agregada",{{"Partida", Int64.Type}})
		in
		    #"Tipo cambiado2"
	lineageTag: 1ee7cb9a-94a4-47aa-a231-dac6c9b56dbd

	annotation PBI_NavigationStepName = Navegación

	annotation PBI_ResultType = Table

